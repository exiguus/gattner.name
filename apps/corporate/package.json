{
  "name": "corporate",
  "version": "2.3.0",
  "description": "Consulting and development of digital solutions",
  "scripts": {
    "postinstall": "test ! -f public/site.webmanifest && npm run data || exit 0",
    "serve": "NODE_ENV=development dotenv -e .env.local parcel serve ./public/index.html --no-cache",
    "dev:pre": "npm run build:msw",
    "dev": "npm run dev:pre && npm run serve",
    "dev:build": "npm run build:app",
    "build:pre": "npm run data && npm test",
    "build": "npm run build:pre && npm run build:app && npm run build:post",
    "build:app": "rm -rf ./dist/ && NODE_ENV=production parcel build ./public/index.html -d ./dist/ --detailed-report 10 --public-url /",
    "build:sw": "mv ./dist/report.html ./dist/report.html.backup && NODE_ENV=production parcel build ./public/service-worker.ts -d ./dist/ --no-cache --experimental-scope-hoisting && rm ./dist/report.html && mv ./dist/report.html.backup ./dist/report.html",
    "build:msw": "npx msw init dist -y",
    "build:fetch": "rm -rf ./.tmp-build/ && tsc --build ./build/",
    "build:post": "npm run build:data && npm run build:manifest && npm run build:sw && npm run bundlewatch",
    "build:data": "cp ./data/files/public/** ./dist/ ",
    "build:manifest": " NODE_ENV=production workbox injectManifest",
    "bundlewatch": "bundlewatch --config bundlewatch.config.js",
    "data": "npm run build:fetch && npm run fetch:data && cp ./data/files/**.* ./public/",
    "report": "NODE_ENV=production parcel build ./public/index.html --detailed-report 10",
    "type-check": "tsc --pretty --noEmit",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,mjs,html}\"",
    "lint": "eslint . --ext ts --ext tsx --ext js --ext jsx --ext mjs",
    "fetch:data": "dotenv -e .env.local node ./.tmp-build/build && rm -rf ./.tmp-build/",
    "test:unit": "dotenv -e .env.test -- jest",
    "test:unit:watch": "dotenv -e .env.test -- jest --watch",
    "test": "npm run lint && npm run type-check && npm run test:unit",
    "coverage": "dotenv -e .env.test -- jest --coverage"
  },
  "prettier": "@boxine/prettier-config",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run type-check",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.@(ts|tsx)": [
      "npm run lint",
      "npm run format"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-transform-runtime": "^7.12.1",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-react": "^7.10.4",
    "@babel/preset-typescript": "^7.16.7",
    "@boxine/eslint-config-jest": "^1.6.0",
    "@boxine/eslint-config-react": "^1.6.0",
    "@boxine/prettier-config": "^1.6.0",
    "@commitlint/cli": "^9.1.2",
    "@commitlint/config-conventional": "^8.3.4",
    "@commitlint/prompt-cli": "^9.1.2",
    "@mswjs/cookies": "^0.1.7",
    "@mswjs/interceptors": "^0.13.1",
    "@open-draft/until": "^1.0.3",
    "@svgr/parcel-plugin-svgr": "^5.4.0",
    "@testing-library/jest-dom": "^5.16.1",
    "@testing-library/react": "^11.1.0",
    "@types/history": "4",
    "@types/jest": "^27.4.0",
    "@types/node": "^17.0.6",
    "@types/node-fetch": "^2.5.12",
    "@types/prop-types": "^15.7.4",
    "@types/react": "16",
    "@types/react-document-meta": "^3.0.0",
    "@types/react-dom": "^16.9.8",
    "@types/react-router-dom": "^5.1.6",
    "@types/styled-components": "^5.1.22",
    "@types/testing-library__jest-dom": "^5.14.2",
    "@types/testing-library__react": "^10.2.0",
    "@types/workbox-expiration": "^4.3.1",
    "@types/workbox-navigation-preload": "^4.3.0",
    "@types/workbox-precaching": "^4.3.1",
    "@types/workbox-routing": "^4.3.1",
    "@types/workbox-strategies": "^4.3.1",
    "@typescript-eslint/eslint-plugin": "^5.8.1",
    "@typescript-eslint/parser": "^5.8.1",
    "@xmldom/xmldom": "^0.8.0",
    "ajv": "^8.8.2",
    "babel-eslint": "^10.1.0",
    "babel-plugin-styled-components": "^1.11.1",
    "bundlewatch": "^0.3.3",
    "conventional-changelog-conventionalcommits": "^4.4.0",
    "cssnano": "4.1.11",
    "debug": "^4.3.3",
    "dotenv": "^10.0.0",
    "dotenv-cli": "^4.1.1",
    "eslint": "7",
    "eslint-config-prettier": "^6.10.1",
    "eslint-config-react-app": "^5.2.1",
    "eslint-plugin-flowtype": "^4.7.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest": "^23.20.0",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-react-hooks": "^2.5.1",
    "eslint-plugin-sonarjs": "^0.5.0",
    "eslint-plugin-testing-library": "^3.8.0",
    "headers-utils": "^3.0.2",
    "husky": "^3.1.0",
    "jest": "^27.4.7",
    "jest-styled-components": "^7.0.8",
    "jest-watch-typeahead": "^1.0.0",
    "lint-staged": "^12.1.5",
    "ms": "^2.1.3",
    "msw": "^0.36.3",
    "node-fetch": "^2.6.1",
    "outvariant": "^1.2.1",
    "parcel-bundler": "^1.12.5",
    "parcel-plugin-bundle-visualiser": "^1.2.0",
    "parcel-plugin-compress": "^2.0.2",
    "parcel-plugin-prerender": "^1.4.1",
    "postcss": "^8.4.6",
    "prettier": "^2.5.1",
    "react-router": "5",
    "set-cookie-parser": "^2.4.8",
    "strict-event-emitter": "^0.2.0",
    "ts-jest": "^27.1.2",
    "tslib": "^2.3.1",
    "typescript": "^4.5.4",
    "whatwg-fetch": "^3.6.2",
    "workbox-build": "^6.4.2",
    "workbox-cli": "^6.4.2"
  },
  "dependencies": {
    "@babel/runtime": "^7.12.1",
    "@badrap/valita": "^0.1.0",
    "@emotion/is-prop-valid": "^1.1.1",
    "@emotion/memoize": "^0.7.5",
    "@emotion/stylis": "^0.8.5",
    "@emotion/unitless": "^0.7.5",
    "@micro-sentry/browser": "^2.1.2",
    "@micro-sentry/core": "^2.1.2",
    "axios": "^0.24.0",
    "babel-polyfill": "^6.26.0",
    "history": "4",
    "hoist-non-react-statics": "^3.3.2",
    "idb": "^7.0.0",
    "mini-create-react-context": "^0.4.1",
    "path-to-regexp": "3",
    "preact": "10.6.4",
    "preact-compat": "^3.19.0",
    "preact-router": "^3.2.1",
    "prop-types": "^15.0.0",
    "randext": "^1.0.0",
    "react": "16",
    "react-document-meta": "^3.0.0-beta.2",
    "react-dom": "16",
    "react-is": "16",
    "react-router-dom": "5",
    "react-side-effect": "^2.1.1",
    "resolve-pathname": "^3.0.0",
    "shallowequal": "^1.1.0",
    "styled-components": "^5.3.3",
    "tiny-invariant": "^1.2.0",
    "tiny-warning": "^1.0.3",
    "value-equal": "^1.0.1",
    "workbox-core": "^6.4.2",
    "workbox-expiration": "^6.4.2",
    "workbox-navigation-preload": "^6.4.2",
    "workbox-precaching": "^6.4.2",
    "workbox-routing": "^6.4.2",
    "workbox-strategies": "^6.4.2"
  },
  "alias": {
    "react": "preact/compat",
    "react-dom": "preact/compat"
  },
  "prerender": {
    "routes": [
      "/",
      "/about",
      "/contact",
      "/impressum",
      "/error"
    ],
    "rendererConfig": {
      "headless": true,
      "renderAfterDocumentEvent": "prerender-trigger",
      "inject": "true",
      "injectProperty": "__PRERENDER"
    }
  },
  "compress": {
    "test": "(.js|site.webmanifest|report.html)",
    "concurrency": 2,
    "gzip": {
      "enabled": true,
      "numiterations": 15,
      "blocksplitting": true,
      "blocksplittinglast": false,
      "blocksplittingmax": 15,
      "zlib": false,
      "zlibLevel": 9,
      "zlibMemLimit": 9
    },
    "brotli": {
      "enabled": true,
      "mode": 0,
      "quality": 11,
      "lgwin": 24,
      "enable_context_modeling": true
    },
    "compressOutput": false
  },
  "author": {
    "name": "Simon Gattner",
    "url": "https://gattner.name/",
    "twitter": "https://twitter.com/exiguus_"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/exiguus/gattner.name.git"
  },
  "browserslist": {
    "production": [
      ">0.5% and last 2 versions",
      "not dead",
      "not ie <= 11",
      "not op_mini all",
      "not IE_Mob 11"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "engines": {
    "node": ">=14",
    "npm": ">= 6.0.1"
  },
  "engineStrict": true,
  "msw": {
    "workerDirectory": "dist"
  }
}
